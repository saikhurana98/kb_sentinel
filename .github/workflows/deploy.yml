name: Deploy KB Sentinel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no changes'
        required: false
        default: false
        type: boolean

env:
  DEPLOY_PATH: /home/kb-sentinel/kb_sentinel
  BACKUP_PATH: /home/kb-sentinel/backups
  SERVICE_NAME: kb-sentinel
  LOG_FILE: /tmp/kb-sentinel-deploy.log

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install dependencies
      run: uv sync
    
    - name: Run syntax check
      run: |
        .venv/bin/python -m py_compile kb_sentinel.py
        .venv/bin/python -c "
        try:
            import kb_sentinel
            print('✅ KB Sentinel imports successfully')
        except Exception as e:
            print(f'❌ Import failed: {e}')
            exit(1)
        "
    
    - name: Validate service files
      run: |
        # Check systemd service file syntax
        systemd-analyze verify contrib/kb-sentinel.service || echo "Warning: systemd-analyze not available in CI"
        
        # Check shell scripts syntax
        bash -n contrib/install-service.sh
        bash -n contrib/uninstall-service.sh
        bash -n contrib/health-check.sh
        bash -n contrib/fix-service.sh

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get full history for better diff detection
    
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
    
    - name: Add known hosts
      run: |
        ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to production
      id: deploy
      run: |
        # Copy deployment script to target
        scp .github/scripts/deploy.sh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/tmp/
        
        # Execute deployment
        ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} '
          chmod +x /tmp/deploy.sh
          /tmp/deploy.sh "${{ github.sha }}" "${{ github.ref_name }}"
        ' 2>&1 | tee deployment.log
        
        # Check if deployment was successful
        if [ ${PIPESTATUS[0]} -eq 0 ]; then
          echo "deployment_status=success" >> $GITHUB_OUTPUT
        else
          echo "deployment_status=failed" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload deployment logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: deployment-logs-${{ github.sha }}
        path: deployment.log
        retention-days: 30
    
    - name: Report deployment failure
      if: steps.deploy.outputs.deployment_status == 'failed'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let logContent = '';
          try {
            logContent = fs.readFileSync('deployment.log', 'utf8');
          } catch (error) {
            logContent = 'Could not read deployment log';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number || 1,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🚨 Deployment Failed
          
          **Commit:** ${context.sha}
          **Branch:** ${context.ref}
          **Workflow:** ${context.workflow}
          
          ### Deployment Log:
          \`\`\`
          ${logContent.slice(-2000)} // Last 2000 chars
          \`\`\`
          
          The deployment has been automatically rolled back to the previous version.
          
          Please check the logs and fix the issues before attempting to deploy again.`
          });
    
    - name: Fail workflow on deployment failure
      if: steps.deploy.outputs.deployment_status == 'failed'
      run: exit 1

  health-check:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
    
    - name: Add known hosts
      run: |
        ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
    
    - name: Run post-deployment health check
      run: |
        ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} '
          cd ${{ env.DEPLOY_PATH }}
          
          # Wait a moment for service to stabilize
          sleep 10
          
          # Run health check
          if [ -f contrib/health-check.sh ]; then
            chmod +x contrib/health-check.sh
            ./contrib/health-check.sh
          else
            echo "Health check script not found, running basic checks..."
            systemctl --user status kb-sentinel.service
          fi
        '